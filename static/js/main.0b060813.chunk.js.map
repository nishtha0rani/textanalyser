{"version":3,"sources":["components/TextForm.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["TextForm","props","useState","text","setText","className","heading","value","onChange","event","target","id","rows","onClick","newText","toUpperCase","toLowerCase","split","length","Navbar","href","title","type","aboutText","placeholder","prototypes","PropTypes","string","isRequired","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAGe,SAASA,EAASC,GAC7B,IAeA,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACI,qCACA,sBAAKC,UAAU,YAAf,UACI,mCAAMJ,EAAMK,QAAZ,OACA,qBAAKD,UAAU,OAAf,SACA,0BAAUA,UAAU,eAAeE,MAAQJ,EAAMK,SAXlC,SAACC,GAEpBL,EAAQK,EAAMC,OAAOH,QAS0DI,GAAG,QAAQC,KAAK,QAI3F,wBAAQP,UAAU,uBAAuBQ,QA1B3B,WAElB,IAAIC,EAAUX,EAAKY,cACnBX,EAAQU,IAuBJ,oCACA,wBAAQT,UAAU,uBAAuBQ,QAtB3B,WAElB,IAAIC,EAAUX,EAAKa,cACnBZ,EAAQU,IAmBJ,uCAGJ,sBAAKT,UAAU,iBAAf,UACI,oDACA,kCAAKF,EAAKc,MAAM,KAAKC,OAArB,cAAwCf,EAAKe,OAA7C,kBACA,kCAAK,KAASf,EAAKc,MAAM,KAAKC,OAA9B,oBACA,2CACA,kCAAKf,EAAL,a,oBCpCG,SAASgB,EAAOlB,GAC3B,OACI,qBAAKI,UAAU,8CAAf,SACN,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAee,KAAM,IAAlC,SAAuCnB,EAAMoB,QAC7C,wBAAQhB,UAAU,iBAAiBiB,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMjB,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BM,GAAG,yBAA7C,UACE,qBAAIN,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOe,KAAM,IAAzD,oBAEF,oBAAIf,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWe,KAAM,IAA9B,SAAmCnB,EAAMsB,iBAG7C,uBAAMlB,UAAU,SAAhB,UACE,uBAAOA,UAAU,oBAAoBiB,KAAK,SAASE,YAAY,SAAS,aAAW,WACnF,wBAAQnB,UAAU,0BAA0BiB,KAAK,SAAjD,+BASRH,EAAOM,WAAa,CAACJ,MAAOK,IAAUC,OAAOC,WACzBL,UAAWG,IAAUC,OAAOC,YAGhDT,EAAOU,aAAe,CAClBR,MAAO,iBACPE,UAAW,SCnBAO,MAdf,WACE,OACE,qCAGA,cAACX,EAAD,CAAQE,MAAM,cACd,qBAAKhB,UAAU,iBAAf,SAEA,cAACL,EAAD,CAAUM,QAAQ,0CCAPyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0b060813.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was Clicked\"+ text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"Uppercase was Clicked\"+ text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    // setText(\"New Text\");\r\n    return (\r\n        <>\r\n        <div className=\"container\">  \r\n            <h1> {props.heading} </h1>\r\n            <div className=\"mb-3\">  \r\n            <textarea className=\"form-control\" value= {text} onChange={handleOnChange} id=\"myBox\" rows=\"8\">\r\n\r\n            </textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick} > Convert to Uppercase </button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick} > Convert to Lowercase </button>\r\n        </div>\r\n\r\n        <div className=\"container my-3\">  \r\n            <h2> Your text Summary</h2>\r\n            <p> {text.split(\" \").length} words and {text.length} characters </p>\r\n            <p> {0.008 *  text.split(\" \").length} Minutes read </p>\r\n            <h2> Preview </h2>\r\n            <p> {text} </p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href =\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href =\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href =\"/\">{props.aboutText}</a>\r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\n\r\nNavbar.prototypes = {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set Title Here',\r\n    aboutText: 'About'\r\n  };","\nimport './App.css';\nimport TextForm from './components/TextForm';\nimport Navbar from './components/Navbar';\nfunction App() {\n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About us\" /> */}\n    {/* <Navbar/> */}\n    <Navbar title=\"TextUtils\"/>\n    <div className=\"container my-3\">\n   \n    <TextForm heading=\"Enter the text to analyze below\"/>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}